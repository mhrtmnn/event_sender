#ifndef _protobuf_handling
#define _protobuf_handling

/* protoc autogenerated header file */
#include "nunchuk_update.pb-c.h"

/*******************************************************************************
* MACROS
*******************************************************************************/
#define MAX_STR_LEN 512


/*******************************************************************************
* PROTOTYPES
*******************************************************************************/

/**
 * Dynamically allocate a new nunchuk_update protobuf and initialize it
 *
 * return: Allocated and initialized protobuf, NULL on error
 */
NunchukUpdate *new_nunchuk_protobuf(void);

/**
 * Free all the dynamically allocated memory portions of the nunchuk_update protobuf
 *
 * return: void
 */
void free_nunchuk_protobuf(NunchukUpdate *);

/**
 * Pack a given nunchuk_update protobuf into a buffer and return that buffer.
 *
 * return: Buffer containing the unpacked protobuf, NULL on error
 */
uint8_t *pack_nunchuk_protobuf(NunchukUpdate *);

/**
 * Unpack a given nunchuk_update protobuf into a pre-allocated nun_stat_t structure
 *
 * return: 0 on success, <0 on error
 */
int unpack_nunchuk_protobuf(uint8_t *, unsigned, nun_stat_t *);

/**
 * Copy the content of a given nun_stat_t struct into a given (allocated and initialized)
 * nunchuk_update protobuf.
 *
 * return: void
 */
void fill_nunchuk_protobuf(nun_stat_t *, NunchukUpdate *);

/**
 * Copy the content of a given nunchuk_update protobuf into a given nun_stat_t struct.
 *
 * return: void
 */
void fill_stats_from_nunchuk_protobuf(NunchukUpdate *, nun_stat_t *);



#endif /* _protobuf_handling */